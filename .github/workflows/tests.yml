name: Tests

on:
  push:
    paths:
      - "inc/**.h"
      - "inc/**.hpp"
      - "src/**.c"
      - "src/**.cpp"
      - "tests/**.c"
      - "tests/**.cpp"
      - "Makefile"
      - "thirds/unity"
      - ".github/workflows/tests.yml"
  pull_request:
    branches: [master]
    paths:
      - "inc/**.h"
      - "inc/**.hpp"
      - "src/**.c"
      - "src/**.cpp"
      - "tests/**.c"
      - "tests/**.cpp"
      - "thirds/unity"
      - "Makefile"
      - ".github/workflows/tests.yml"
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

jobs:
  tests-pchost:
    strategy:
      fail-fast: true
      matrix:
        platform: [x86, x64]
        fp16: ["0", "1"]
        fp32_fp64: ["0", "1"]
        buildin-div: ["0", "1"]
        buildin-alloc: ["0", "1"]
        utf-8-support: ["0", "1"]
        sanitizer: [none, address, undefined]
    runs-on: ubuntu-latest
    name: >-
      Tests ${{ matrix.platform }}
      div: ${{ matrix.buildin-div }}
      alloc: ${{ matrix.buildin-alloc }}
      utf-8: ${{ matrix.utf-8-support }}
      fp16: ${{ matrix.fp16 }}
      fp32: ${{ matrix.fp32_fp64 }}
      fp64: ${{ matrix.fp32_fp64 }}
      sanitizer: ${{ matrix.sanitizer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      # 设置GCC版本
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: "${{ matrix.platform }}"
      # 进行测试
      - name: Test with sanitizer
        if: ${{ matrix.sanitizer }} != none
        run: |
          make test
        env:
          MTFMT_BUILD_USE_LTO: "1"
          MTFMT_BUILD_WITH_SANITIZER: "-fsanitize=${{ matrix.sanitizer }}"
          MTFMT_BUILD_C_DEFS: >-
            -D_MSTR_USE_MALLOC=${{ matrix.buildin-alloc }}
            -D_MSTR_USE_HARDWARE_DIV=${{ matrix.buildin-div }}
            -D_MSTR_USE_UTF_8=${{ matrix.utf-8-support }}
            -D_MSTR_USE_FP_FLOAT16=${{ matrix.fp16 }}
            -D_MSTR_USE_FP_FLOAT32=${{ matrix.fp32_fp64 }}
            -D_MSTR_USE_FP_FLOAT64=${{ matrix.fp32_fp64 }}
      - name: Test without sanitizer
        if: ${{ matrix.sanitizer }} == none
        run: |
          make test
        env:
          MTFMT_BUILD_USE_LTO: "1"
          MTFMT_BUILD_C_DEFS: >-
            -D_MSTR_USE_MALLOC=${{ matrix.buildin-alloc }}
            -D_MSTR_USE_HARDWARE_DIV=${{ matrix.buildin-div }}
            -D_MSTR_USE_UTF_8=${{ matrix.utf-8-support }}
            -D_MSTR_USE_FP_FLOAT16=${{ matrix.fp16 }}
            -D_MSTR_USE_FP_FLOAT32=${{ matrix.fp32_fp64 }}
            -D_MSTR_USE_FP_FLOAT64=${{ matrix.fp32_fp64 }}